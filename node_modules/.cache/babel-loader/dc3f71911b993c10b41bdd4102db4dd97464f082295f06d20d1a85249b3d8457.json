{"ast":null,"code":"var _jsxFileName = \"/Users/shrijanakwade/Downloads/stockpilot-app/src/components/RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../config/firebaseConfig'; // Make sure path is correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  onSwitchToLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    businessName: '',\n    dbaName: '',\n    owners: [''],\n    coOwners: [''],\n    email: '',\n    confirmEmail: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    address: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingAddress: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingSameAsPhysical: false\n  });\n\n  // Update form field\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith('address.')) {\n      setFormData(prev => ({\n        ...prev,\n        address: {\n          ...prev.address,\n          [name.split('.')[1]]: value\n        }\n      }));\n    } else if (name.startsWith('billingAddress.')) {\n      setFormData(prev => ({\n        ...prev,\n        billingAddress: {\n          ...prev.billingAddress,\n          [name.split('.')[1]]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Add dynamic owner or co-owner\n  const addOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      owners: [...prev.owners, '']\n    }));\n  };\n  const addCoOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      coOwners: [...prev.coOwners, '']\n    }));\n  };\n  const handleOwnerChange = (i, value, type) => {\n    const list = [...formData[type]];\n    list[i] = value;\n    setFormData(prev => ({\n      ...prev,\n      [type]: list\n    }));\n  };\n\n  // Toggle billing same as physical\n  const toggleBillingSame = () => {\n    setFormData(prev => {\n      const same = !prev.billingSameAsPhysical;\n      return {\n        ...prev,\n        billingSameAsPhysical: same,\n        billingAddress: same ? {\n          ...prev.address\n        } : {\n          street: '',\n          country: '',\n          state: '',\n          city: '',\n          pincode: ''\n        }\n      };\n    });\n  };\n\n  // Handle form submission (dummy for now)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      confirmEmail,\n      password,\n      confirmPassword\n    } = formData;\n    if (email !== confirmEmail) return alert(\"Emails do not match\");\n    if (password !== confirmPassword) return alert(\"Passwords do not match\");\n    try {\n      const userCred = await createUserWithEmailAndPassword(auth, email, password);\n      console.log(\"User created: \", userCred.user);\n      // Route to OTP page or dashboard\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"businessName\",\n      value: formData.businessName,\n      onChange: handleChange,\n      placeholder: \"Business Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"dbaName\",\n      value: formData.dbaName,\n      onChange: handleChange,\n      placeholder: \"DBA Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), formData.owners.map((owner, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: owner,\n      onChange: e => handleOwnerChange(i, e.target.value, 'owners'),\n      placeholder: `Owner ${i + 1} Name`\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addOwner,\n      children: \"+ Add Owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), formData.coOwners.map((coOwner, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: coOwner,\n      onChange: e => handleOwnerChange(i, e.target.value, 'coOwners'),\n      placeholder: `Co-Owner ${i + 1} Name`\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addCoOwner,\n      children: \"+ Add Co-Owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"confirmEmail\",\n      value: formData.confirmEmail,\n      onChange: handleChange,\n      placeholder: \"Confirm Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), formData.email === formData.confirmEmail && formData.email !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Email matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 77\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: formData.confirmPassword,\n      onChange: handleChange,\n      placeholder: \"Confirm Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), formData.password === formData.confirmPassword && formData.password !== '' && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Password matches\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Physical Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address.street\",\n      value: formData.address.street,\n      onChange: handleChange,\n      placeholder: \"Street\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address.country\",\n      value: formData.address.country,\n      onChange: handleChange,\n      placeholder: \"Country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address.state\",\n      value: formData.address.state,\n      onChange: handleChange,\n      placeholder: \"State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address.city\",\n      value: formData.address.city,\n      onChange: handleChange,\n      placeholder: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address.pincode\",\n      value: formData.address.pincode,\n      onChange: handleChange,\n      placeholder: \"Pincode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: formData.billingSameAsPhysical,\n        onChange: toggleBillingSame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), \"Billing same as physical address\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), !formData.billingSameAsPhysical && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Billing Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"billingAddress.street\",\n        value: formData.billingAddress.street,\n        onChange: handleChange,\n        placeholder: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"billingAddress.country\",\n        value: formData.billingAddress.country,\n        onChange: handleChange,\n        placeholder: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"billingAddress.state\",\n        value: formData.billingAddress.state,\n        onChange: handleChange,\n        placeholder: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"billingAddress.city\",\n        value: formData.billingAddress.city,\n        onChange: handleChange,\n        placeholder: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"billingAddress.pincode\",\n        value: formData.billingAddress.pincode,\n        onChange: handleChange,\n        placeholder: \"Pincode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSwitchToLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"YOj0Ep83qoHPrveP6osScvy1YEQ=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterForm","onSwitchToLogin","_s","formData","setFormData","businessName","dbaName","owners","coOwners","email","confirmEmail","password","confirmPassword","phone","address","street","country","state","city","pincode","billingAddress","billingSameAsPhysical","handleChange","e","name","value","target","startsWith","prev","split","addOwner","addCoOwner","handleOwnerChange","i","type","list","toggleBillingSame","same","handleSubmit","preventDefault","alert","userCred","console","log","user","err","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","required","map","owner","onClick","coOwner","style","color","checked","_c","$RefreshReg$"],"sources":["/Users/shrijanakwade/Downloads/stockpilot-app/src/components/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../config/firebaseConfig'; // Make sure path is correct\n\nconst RegisterForm = ({ onSwitchToLogin }) => {\n  const [formData, setFormData] = useState({\n    businessName: '',\n    dbaName: '',\n    owners: [''],\n    coOwners: [''],\n    email: '',\n    confirmEmail: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    address: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingAddress: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingSameAsPhysical: false,\n  });\n\n  // Update form field\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name.startsWith('address.')) {\n      setFormData(prev => ({\n        ...prev,\n        address: {\n          ...prev.address,\n          [name.split('.')[1]]: value,\n        },\n      }));\n    } else if (name.startsWith('billingAddress.')) {\n      setFormData(prev => ({\n        ...prev,\n        billingAddress: {\n          ...prev.billingAddress,\n          [name.split('.')[1]]: value,\n        },\n      }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Add dynamic owner or co-owner\n  const addOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      owners: [...prev.owners, ''],\n    }));\n  };\n\n  const addCoOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      coOwners: [...prev.coOwners, ''],\n    }));\n  };\n\n  const handleOwnerChange = (i, value, type) => {\n    const list = [...formData[type]];\n    list[i] = value;\n    setFormData(prev => ({\n      ...prev,\n      [type]: list,\n    }));\n  };\n\n  // Toggle billing same as physical\n  const toggleBillingSame = () => {\n    setFormData(prev => {\n      const same = !prev.billingSameAsPhysical;\n      return {\n        ...prev,\n        billingSameAsPhysical: same,\n        billingAddress: same ? { ...prev.address } : {\n          street: '',\n          country: '',\n          state: '',\n          city: '',\n          pincode: ''\n        }\n      };\n    });\n  };\n\n  // Handle form submission (dummy for now)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const {\n      email,\n      confirmEmail,\n      password,\n      confirmPassword\n    } = formData;\n\n    if (email !== confirmEmail) return alert(\"Emails do not match\");\n    if (password !== confirmPassword) return alert(\"Passwords do not match\");\n\n    try {\n      const userCred = await createUserWithEmailAndPassword(auth, email, password);\n      console.log(\"User created: \", userCred.user);\n      // Route to OTP page or dashboard\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Register</h2>\n\n      <input type=\"text\" name=\"businessName\" value={formData.businessName} onChange={handleChange} placeholder=\"Business Name\" required />\n      <input type=\"text\" name=\"dbaName\" value={formData.dbaName} onChange={handleChange} placeholder=\"DBA Name\" required />\n\n      {formData.owners.map((owner, i) => (\n        <input\n          key={i}\n          type=\"text\"\n          value={owner}\n          onChange={(e) => handleOwnerChange(i, e.target.value, 'owners')}\n          placeholder={`Owner ${i + 1} Name`}\n        />\n      ))}\n      <button type=\"button\" onClick={addOwner}>+ Add Owner</button>\n\n      {formData.coOwners.map((coOwner, i) => (\n        <input\n          key={i}\n          type=\"text\"\n          value={coOwner}\n          onChange={(e) => handleOwnerChange(i, e.target.value, 'coOwners')}\n          placeholder={`Co-Owner ${i + 1} Name`}\n        />\n      ))}\n      <button type=\"button\" onClick={addCoOwner}>+ Add Co-Owner</button>\n\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Email\" required />\n      <input type=\"email\" name=\"confirmEmail\" value={formData.confirmEmail} onChange={handleChange} placeholder=\"Confirm Email\" required />\n      {formData.email === formData.confirmEmail && formData.email !== '' && <p style={{ color: 'green' }}>Email matches</p>}\n\n      <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Password\" required />\n      <input type=\"password\" name=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} placeholder=\"Confirm Password\" required />\n      {formData.password === formData.confirmPassword && formData.password !== '' && <p style={{ color: 'green' }}>Password matches</p>}\n\n      {/* Physical Address */}\n      <h4>Physical Address</h4>\n      <input type=\"text\" name=\"address.street\" value={formData.address.street} onChange={handleChange} placeholder=\"Street\" />\n      <input type=\"text\" name=\"address.country\" value={formData.address.country} onChange={handleChange} placeholder=\"Country\" />\n      <input type=\"text\" name=\"address.state\" value={formData.address.state} onChange={handleChange} placeholder=\"State\" />\n      <input type=\"text\" name=\"address.city\" value={formData.address.city} onChange={handleChange} placeholder=\"City\" />\n      <input type=\"text\" name=\"address.pincode\" value={formData.address.pincode} onChange={handleChange} placeholder=\"Pincode\" />\n\n      <label>\n        <input type=\"checkbox\" checked={formData.billingSameAsPhysical} onChange={toggleBillingSame} />\n        Billing same as physical address\n      </label>\n\n      {!formData.billingSameAsPhysical && (\n        <>\n          <h4>Billing Address</h4>\n          <input type=\"text\" name=\"billingAddress.street\" value={formData.billingAddress.street} onChange={handleChange} placeholder=\"Street\" />\n          <input type=\"text\" name=\"billingAddress.country\" value={formData.billingAddress.country} onChange={handleChange} placeholder=\"Country\" />\n          <input type=\"text\" name=\"billingAddress.state\" value={formData.billingAddress.state} onChange={handleChange} placeholder=\"State\" />\n          <input type=\"text\" name=\"billingAddress.city\" value={formData.billingAddress.city} onChange={handleChange} placeholder=\"City\" />\n          <input type=\"text\" name=\"billingAddress.pincode\" value={formData.billingAddress.pincode} onChange={handleChange} placeholder=\"Pincode\" />\n        </>\n      )}\n\n      <button type=\"submit\">Register</button>\n      <p>Already have an account? <button onClick={onSwitchToLogin}>Login</button></p>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}