{"ast":null,"code":"import _objectSpread from\"/Users/shrijanakwade/Downloads/stockpilot-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{createUserWithEmailAndPassword}from'firebase/auth';import{auth}from'../config/firebaseConfig';// Make sure path is correct\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RegisterForm=_ref=>{let{onSwitchToLogin}=_ref;const[formData,setFormData]=useState({businessName:'',dbaName:'',owners:[''],coOwners:[''],email:'',confirmEmail:'',password:'',confirmPassword:'',phone:'',address:{street:'',country:'',state:'',city:'',pincode:''},billingAddress:{street:'',country:'',state:'',city:'',pincode:''},billingSameAsPhysical:false});// Update form field\nconst handleChange=e=>{const{name,value}=e.target;if(name.startsWith('address.')){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{address:_objectSpread(_objectSpread({},prev.address),{},{[name.split('.')[1]]:value})}));}else if(name.startsWith('billingAddress.')){setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{billingAddress:_objectSpread(_objectSpread({},prev.billingAddress),{},{[name.split('.')[1]]:value})}));}else{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}};// Add dynamic owner or co-owner\nconst addOwner=()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{owners:[...prev.owners,'']}));};const addCoOwner=()=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{coOwners:[...prev.coOwners,'']}));};const handleOwnerChange=(i,value,type)=>{const list=[...formData[type]];list[i]=value;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[type]:list}));};// Toggle billing same as physical\nconst toggleBillingSame=()=>{setFormData(prev=>{const same=!prev.billingSameAsPhysical;return _objectSpread(_objectSpread({},prev),{},{billingSameAsPhysical:same,billingAddress:same?_objectSpread({},prev.address):{street:'',country:'',state:'',city:'',pincode:''}});});};// Handle form submission (dummy for now)\nconst handleSubmit=async e=>{e.preventDefault();const{email,confirmEmail,password,confirmPassword}=formData;if(email!==confirmEmail)return alert(\"Emails do not match\");if(password!==confirmPassword)return alert(\"Passwords do not match\");try{const userCred=await createUserWithEmailAndPassword(auth,email,password);console.log(\"User created: \",userCred.user);// Route to OTP page or dashboard\n}catch(err){alert(err.message);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"businessName\",value:formData.businessName,onChange:handleChange,placeholder:\"Business Name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"dbaName\",value:formData.dbaName,onChange:handleChange,placeholder:\"DBA Name\",required:true}),formData.owners.map((owner,i)=>/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:owner,onChange:e=>handleOwnerChange(i,e.target.value,'owners'),placeholder:\"Owner \".concat(i+1,\" Name\")},i)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addOwner,children:\"+ Add Owner\"}),formData.coOwners.map((coOwner,i)=>/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:coOwner,onChange:e=>handleOwnerChange(i,e.target.value,'coOwners'),placeholder:\"Co-Owner \".concat(i+1,\" Name\")},i)),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addCoOwner,children:\"+ Add Co-Owner\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"confirmEmail\",value:formData.confirmEmail,onChange:handleChange,placeholder:\"Confirm Email\",required:true}),formData.email===formData.confirmEmail&&formData.email!==''&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:\"Email matches\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"Password\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Confirm Password\",required:true}),formData.password===formData.confirmPassword&&formData.password!==''&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:\"Password matches\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"Physical Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address.street\",value:formData.address.street,onChange:handleChange,placeholder:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address.country\",value:formData.address.country,onChange:handleChange,placeholder:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address.state\",value:formData.address.state,onChange:handleChange,placeholder:\"State\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address.city\",value:formData.address.city,onChange:handleChange,placeholder:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"address.pincode\",value:formData.address.pincode,onChange:handleChange,placeholder:\"Pincode\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:formData.billingSameAsPhysical,onChange:toggleBillingSame}),\"Billing same as physical address\"]}),!formData.billingSameAsPhysical&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Billing Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"billingAddress.street\",value:formData.billingAddress.street,onChange:handleChange,placeholder:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"billingAddress.country\",value:formData.billingAddress.country,onChange:handleChange,placeholder:\"Country\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"billingAddress.state\",value:formData.billingAddress.state,onChange:handleChange,placeholder:\"State\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"billingAddress.city\",value:formData.billingAddress.city,onChange:handleChange,placeholder:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"billingAddress.pincode\",value:formData.billingAddress.pincode,onChange:handleChange,placeholder:\"Pincode\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Register\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"button\",{onClick:onSwitchToLogin,children:\"Login\"})]})]});};export default RegisterForm;","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegisterForm","_ref","onSwitchToLogin","formData","setFormData","businessName","dbaName","owners","coOwners","email","confirmEmail","password","confirmPassword","phone","address","street","country","state","city","pincode","billingAddress","billingSameAsPhysical","handleChange","e","name","value","target","startsWith","prev","_objectSpread","split","addOwner","addCoOwner","handleOwnerChange","i","type","list","toggleBillingSame","same","handleSubmit","preventDefault","alert","userCred","console","log","user","err","message","onSubmit","children","onChange","placeholder","required","map","owner","concat","onClick","coOwner","style","color","checked"],"sources":["/Users/shrijanakwade/Downloads/stockpilot-app/src/components/RegisterForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../config/firebaseConfig'; // Make sure path is correct\n\nconst RegisterForm = ({ onSwitchToLogin }) => {\n  const [formData, setFormData] = useState({\n    businessName: '',\n    dbaName: '',\n    owners: [''],\n    coOwners: [''],\n    email: '',\n    confirmEmail: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    address: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingAddress: {\n      street: '',\n      country: '',\n      state: '',\n      city: '',\n      pincode: ''\n    },\n    billingSameAsPhysical: false,\n  });\n\n  // Update form field\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name.startsWith('address.')) {\n      setFormData(prev => ({\n        ...prev,\n        address: {\n          ...prev.address,\n          [name.split('.')[1]]: value,\n        },\n      }));\n    } else if (name.startsWith('billingAddress.')) {\n      setFormData(prev => ({\n        ...prev,\n        billingAddress: {\n          ...prev.billingAddress,\n          [name.split('.')[1]]: value,\n        },\n      }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n  };\n\n  // Add dynamic owner or co-owner\n  const addOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      owners: [...prev.owners, ''],\n    }));\n  };\n\n  const addCoOwner = () => {\n    setFormData(prev => ({\n      ...prev,\n      coOwners: [...prev.coOwners, ''],\n    }));\n  };\n\n  const handleOwnerChange = (i, value, type) => {\n    const list = [...formData[type]];\n    list[i] = value;\n    setFormData(prev => ({\n      ...prev,\n      [type]: list,\n    }));\n  };\n\n  // Toggle billing same as physical\n  const toggleBillingSame = () => {\n    setFormData(prev => {\n      const same = !prev.billingSameAsPhysical;\n      return {\n        ...prev,\n        billingSameAsPhysical: same,\n        billingAddress: same ? { ...prev.address } : {\n          street: '',\n          country: '',\n          state: '',\n          city: '',\n          pincode: ''\n        }\n      };\n    });\n  };\n\n  // Handle form submission (dummy for now)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const {\n      email,\n      confirmEmail,\n      password,\n      confirmPassword\n    } = formData;\n\n    if (email !== confirmEmail) return alert(\"Emails do not match\");\n    if (password !== confirmPassword) return alert(\"Passwords do not match\");\n\n    try {\n      const userCred = await createUserWithEmailAndPassword(auth, email, password);\n      console.log(\"User created: \", userCred.user);\n      // Route to OTP page or dashboard\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Register</h2>\n\n      <input type=\"text\" name=\"businessName\" value={formData.businessName} onChange={handleChange} placeholder=\"Business Name\" required />\n      <input type=\"text\" name=\"dbaName\" value={formData.dbaName} onChange={handleChange} placeholder=\"DBA Name\" required />\n\n      {formData.owners.map((owner, i) => (\n        <input\n          key={i}\n          type=\"text\"\n          value={owner}\n          onChange={(e) => handleOwnerChange(i, e.target.value, 'owners')}\n          placeholder={`Owner ${i + 1} Name`}\n        />\n      ))}\n      <button type=\"button\" onClick={addOwner}>+ Add Owner</button>\n\n      {formData.coOwners.map((coOwner, i) => (\n        <input\n          key={i}\n          type=\"text\"\n          value={coOwner}\n          onChange={(e) => handleOwnerChange(i, e.target.value, 'coOwners')}\n          placeholder={`Co-Owner ${i + 1} Name`}\n        />\n      ))}\n      <button type=\"button\" onClick={addCoOwner}>+ Add Co-Owner</button>\n\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} placeholder=\"Email\" required />\n      <input type=\"email\" name=\"confirmEmail\" value={formData.confirmEmail} onChange={handleChange} placeholder=\"Confirm Email\" required />\n      {formData.email === formData.confirmEmail && formData.email !== '' && <p style={{ color: 'green' }}>Email matches</p>}\n\n      <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} placeholder=\"Password\" required />\n      <input type=\"password\" name=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} placeholder=\"Confirm Password\" required />\n      {formData.password === formData.confirmPassword && formData.password !== '' && <p style={{ color: 'green' }}>Password matches</p>}\n\n      {/* Physical Address */}\n      <h4>Physical Address</h4>\n      <input type=\"text\" name=\"address.street\" value={formData.address.street} onChange={handleChange} placeholder=\"Street\" />\n      <input type=\"text\" name=\"address.country\" value={formData.address.country} onChange={handleChange} placeholder=\"Country\" />\n      <input type=\"text\" name=\"address.state\" value={formData.address.state} onChange={handleChange} placeholder=\"State\" />\n      <input type=\"text\" name=\"address.city\" value={formData.address.city} onChange={handleChange} placeholder=\"City\" />\n      <input type=\"text\" name=\"address.pincode\" value={formData.address.pincode} onChange={handleChange} placeholder=\"Pincode\" />\n\n      <label>\n        <input type=\"checkbox\" checked={formData.billingSameAsPhysical} onChange={toggleBillingSame} />\n        Billing same as physical address\n      </label>\n\n      {!formData.billingSameAsPhysical && (\n        <>\n          <h4>Billing Address</h4>\n          <input type=\"text\" name=\"billingAddress.street\" value={formData.billingAddress.street} onChange={handleChange} placeholder=\"Street\" />\n          <input type=\"text\" name=\"billingAddress.country\" value={formData.billingAddress.country} onChange={handleChange} placeholder=\"Country\" />\n          <input type=\"text\" name=\"billingAddress.state\" value={formData.billingAddress.state} onChange={handleChange} placeholder=\"State\" />\n          <input type=\"text\" name=\"billingAddress.city\" value={formData.billingAddress.city} onChange={handleChange} placeholder=\"City\" />\n          <input type=\"text\" name=\"billingAddress.pincode\" value={formData.billingAddress.pincode} onChange={handleChange} placeholder=\"Pincode\" />\n        </>\n      )}\n\n      <button type=\"submit\">Register</button>\n      <p>Already have an account? <button onClick={onSwitchToLogin}>Login</button></p>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}