{"ast":null,"code":"var _jsxFileName = \"/Users/shrijanakwade/Downloads/stockpilot-app/src/components/SignInForm.jsx\",\n  _s = $RefreshSig$();\n// src/components/SignInForm.jsx\nimport React, { useState } from 'react';\nimport { auth, RecaptchaVerifier } from '../config/firebaseConfig';\nimport { signInWithPhoneNumber } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignInForm() {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [step, setStep] = useState(1);\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const setupRecaptcha = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n        size: 'invisible',\n        callback: () => {\n          // reCAPTCHA solved\n        }\n      }, auth);\n    }\n  };\n  const handleSendOtp = async () => {\n    setupRecaptcha();\n    const appVerifier = window.recaptchaVerifier;\n    try {\n      const result = await signInWithPhoneNumber(auth, phone, appVerifier);\n      setConfirmationResult(result);\n      setStep(2);\n      alert('OTP sent successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to send OTP. Check phone format and try again.');\n    }\n  };\n  const handleVerifyOtp = async () => {\n    try {\n      await confirmationResult.confirm(otp);\n      alert('‚úÖ OTP verified! User logged in.');\n      // TODO: redirect to dashboard or fetch user data\n    } catch (error) {\n      console.error(error);\n      alert('‚ùå Invalid OTP.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        children: \"\\uD83D\\uDCF1 Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"+91XXXXXXXXXX\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        className: \"border px-3 py-2 w-full rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        children: \"\\uD83D\\uDD10 Enter OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"123456\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        className: \"border px-3 py-2 w-full rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        className: \"bg-green-600 text-white px-4 py-2 rounded\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInForm, \"RetfwJ5Bn04M0YxXMXVUo2mjuVc=\");\n_c = SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","auth","RecaptchaVerifier","signInWithPhoneNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","SignInForm","_s","phone","setPhone","otp","setOtp","step","setStep","confirmationResult","setConfirmationResult","setupRecaptcha","window","recaptchaVerifier","size","callback","handleSendOtp","appVerifier","result","alert","error","console","handleVerifyOtp","confirm","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/shrijanakwade/Downloads/stockpilot-app/src/components/SignInForm.jsx"],"sourcesContent":["// src/components/SignInForm.jsx\nimport React, { useState } from 'react';\nimport { auth, RecaptchaVerifier } from '../config/firebaseConfig';\nimport { signInWithPhoneNumber } from 'firebase/auth';\n\nexport default function SignInForm() {\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [step, setStep] = useState(1);\n  const [confirmationResult, setConfirmationResult] = useState(null);\n\n  const setupRecaptcha = () => {\n    if (!window.recaptchaVerifier) {\n      window.recaptchaVerifier = new RecaptchaVerifier(\n        'recaptcha-container',\n        {\n          size: 'invisible',\n          callback: () => {\n            // reCAPTCHA solved\n          },\n        },\n        auth\n      );\n    }\n  };\n\n  const handleSendOtp = async () => {\n    setupRecaptcha();\n    const appVerifier = window.recaptchaVerifier;\n\n    try {\n      const result = await signInWithPhoneNumber(auth, phone, appVerifier);\n      setConfirmationResult(result);\n      setStep(2);\n      alert('OTP sent successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to send OTP. Check phone format and try again.');\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    try {\n      await confirmationResult.confirm(otp);\n      alert('‚úÖ OTP verified! User logged in.');\n      // TODO: redirect to dashboard or fetch user data\n    } catch (error) {\n      console.error(error);\n      alert('‚ùå Invalid OTP.');\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div id=\"recaptcha-container\"></div>\n\n      {step === 1 ? (\n        <>\n          <label className=\"block\">üì± Phone Number:</label>\n          <input\n            type=\"tel\"\n            placeholder=\"+91XXXXXXXXXX\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            className=\"border px-3 py-2 w-full rounded\"\n          />\n          <button onClick={handleSendOtp} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n            Send OTP\n          </button>\n        </>\n      ) : (\n        <>\n          <label className=\"block\">üîê Enter OTP:</label>\n          <input\n            type=\"text\"\n            placeholder=\"123456\"\n            value={otp}\n            onChange={(e) => setOtp(e.target.value)}\n            className=\"border px-3 py-2 w-full rounded\"\n          />\n          <button onClick={handleVerifyOtp} className=\"bg-green-600 text-white px-4 py-2 rounded\">\n            Verify OTP\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}